// Generated by CoffeeScript 1.7.1

/*
  scrollToTopGently

  @require jQuery
  @require jQuery Easing v1.3
 */

(function() {
  $.scrollToTopGently = function(element, options) {
    var $body, $element, $leftTarget, $window, addMouseWheelCancel, addScrollButtonEvent, defaults, doResetLeftPosition, doScrollTop, initialize, isActive, isInitialized, plugin, removeMouseWheelCancel;
    defaults = {
      version: "0.1",
      leftTarget: null,
      topThreshold: 100,
      duration: 200,
      skip: true,
      skipTargetTop: 200,
      ease: "easeOutExpo"
    };
    isInitialized = false;
    isActive = false;
    $window = null;
    $body = null;
    $leftTarget = null;
    plugin = this;
    plugin.settings = {};
    $element = $(element);
    plugin.init = function() {
      if (isInitialized) {
        return;
      }
      isInitialized = true;
      plugin.settings = $.extend({}, defaults, options);
      initialize();
      return this;
    };
    initialize = function() {
      console.log("[scrollToTopGently] init");
      $element.hide();
      $element.css({
        position: "fixed"
      });
      $window = $(window);
      $body = $('body');
      if (plugin.settings.leftTarget) {
        $leftTarget = $(leftTarget);
      } else {
        $leftTarget = $body;
      }
      $window.off("scroll.scrollToTopGently");
      $window.on("scroll.scrollToTopGently", (function(_this) {
        return function(e) {
          var scrollTop;
          scrollTop = $window.scrollTop();
          if (!isActive && scrollTop > plugin.settings.topThreshold) {
            isActive = true;
            return $element.fadeIn(250);
          } else if (isActive && scrollTop <= plugin.settings.topThreshold) {
            isActive = false;
            return $element.fadeOut(250);
          }
        };
      })(this));
      $window.on("resize.scrollToTopGently", (function(_this) {
        return function() {
          return doResetLeftPosition();
        };
      })(this));
      setTimeout((function(_this) {
        return function() {
          return doResetLeftPosition();
        };
      })(this), 1);
      return addScrollButtonEvent();
    };
    addScrollButtonEvent = function() {
      removeMouseWheelCancel();
      $element.off("click.scrollToTopGently");
      return $element.on("click.scrollToTopGently", (function(_this) {
        return function(e) {
          $element.off("click.scrollToTopGently");
          doScrollTop();
          addMouseWheelCancel();
          e.preventDefault();
          return false;
        };
      })(this));
    };
    doScrollTop = function() {
      if (plugin.settings.skip) {
        $('html,body').stop(false, true).animate({
          scrollTop: plugin.settings.skipTargetTop
        }, 0, plugin.settings.ease);
        return setTimeout((function(_this) {
          return function() {
            return $('html,body').animate({
              scrollTop: 0
            }, plugin.settings.duration, plugin.settings.ease, function() {
              return addScrollButtonEvent();
            });
          };
        })(this), 1);
      } else {
        return $('html,body').stop(false, true).animate({
          scrollTop: 0
        }, plugin.settings.duration, plugin.settings.ease, (function(_this) {
          return function() {
            return addScrollButtonEvent();
          };
        })(this));
      }
    };
    addMouseWheelCancel = function() {
      return $body.on("mousewheel.scrollToTopGently", (function(_this) {
        return function() {
          $body.off("mousewheel.scrollToTopGently");
          $('html,body').stop(true, false);
          return addScrollButtonEvent();
        };
      })(this));
    };
    removeMouseWheelCancel = function() {
      return $body.off("mousewheel.scrollToTopGently");
    };
    doResetLeftPosition = function() {
      var targetBottomNum, targetLeftNum;
      targetLeftNum = $leftTarget.offset().left + $leftTarget.width() - $element.width();
      targetLeftNum = Math.floor(targetLeftNum);
      targetBottomNum = 50;
      return $element.css({
        "left": targetLeftNum,
        "bottom": targetBottomNum
      });
    };
    plugin.version = function() {
      return console.log("Version: " + plugin.settings.version);
    };
    return plugin.init();
  };

  $.fn.scrollToTopGently = function(options) {
    return this.each(function() {
      var plugin;
      if (void 0 === $(this).data('scrollToTopGently')) {
        plugin = new $.scrollToTopGently(this, options);
        return $(this).data('scrollToTopGently', plugin);
      }
    });
  };

}).call(this);

//# sourceMappingURL=scroll-to-top-gently.map
